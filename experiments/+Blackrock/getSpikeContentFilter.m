function [filtobj,filtlbl] = getSpikeContentFilter(id,fs)
% GETSPIKECONTENTFILTER Predefined filters associated with a string ID
%
%   [FILTOBJ,FILTLBL] = GETSPIKECONTENTFILTER(NAME)
%   Get the filter object FILTOBJ and label FILTLBL associated with the
%   string identifier NAME.
if nargin<2||isempty(fs),fs=30e3;end

% validate inputs
assert(~isempty(id),'Must provide string identifier');
assert(ischar(id),'Must provide char input for NAME, not ''%s''',class(id));

% design the requested filter
switch lower(id)
    case 'butter_o2_hp_250'
        filtobj = designfilt('highpassiir',...
            'DesignMethod','butter',...
            'FilterOrder',2,...
            'HalfPowerFrequency',250,...
            'SampleRate',fs);
        filtlbl = 'IIR Highpass (Butterworth 250 Hz 3-dB point, 2nd order)';
        
    case 'butter_o4_hp_250'
        filtobj = designfilt('highpassiir',...
            'DesignMethod','butter',...
            'FilterOrder',4,...
            'HalfPowerFrequency',250,...
            'SampleRate',fs);
        filtlbl = 'IIR Highpass (Butterworth 250 Hz 3-dB point, 4th order)';
        
    case 'butter_o4_bp_250-5000'
        filtobj = designfilt('bandpassiir',...
            'DesignMethod','butter',...
            'FilterOrder',4,...
            'HalfPowerFrequency1',250,...
            'HalfPowerFrequency2',5000,...
            'SampleRate',fs);
        filtlbl = 'IIR Bandpass (Butterworth 250/5000 Hz 3-dB points, 4th order)';
        
    case 'butter_o8_bp_250-5000'
        filtobj = designfilt('bandpassiir',...
            'DesignMethod','butter',...
            'FilterOrder',8,...
            'HalfPowerFrequency1',250,...
            'HalfPowerFrequency2',5000,...
            'SampleRate',fs);
        filtlbl = 'IIR Bandpass (Butterworth 250/5000 Hz 3-dB points, 8th order)';
        
    case 'butter_combo_o2_hp_250_lp_5000'
        filtobj = cell(1,2);
        filtobj{1} = designfilt('highpassiir',...
            'DesignMethod','butter',...
            'FilterOrder',2,...
            'HalfPowerFrequency',250,...
            'SampleRate',fs);
        filtobj{2} = designfilt('lowpassiir',...
            'DesignMethod','butter',...
            'FilterOrder',2,...
            'HalfPowerFrequency',5000,...
            'SampleRate',fs);
        filtlbl = 'IIR Combo (Butterworth 2nd-order 250 Hz highpass, 5000 Hz lowpass)';
        
    case 'butter_combo_o4_hp_250_lp_5000'
        filtobj = cell(1,2);
        filtobj{1} = designfilt('highpassiir',...
            'DesignMethod','butter',...
            'FilterOrder',4,...
            'HalfPowerFrequency',250,...
            'SampleRate',fs);
        filtobj{2} = designfilt('lowpassiir',...
            'DesignMethod','butter',...
            'FilterOrder',4,...
            'HalfPowerFrequency',5000,...
            'SampleRate',fs);
        filtlbl = 'IIR Combo (Butterworth 4th-order 250 Hz highpass, 5000 Hz lowpass)';
        
    case 'butter_analog_front_end'
        filtobj = cell(1,2);
        filtobj{1} = designfilt('highpassiir',...
            'DesignMethod','butter',...
            'FilterOrder',1,...
            'HalfPowerFrequency',0.3,...
            'SampleRate',fs);
        filtobj{2} = designfilt('lowpassiir',...
            'DesignMethod','butter',...
            'FilterOrder',3,...
            'HalfPowerFrequency',7500,...
            'SampleRate',fs);
        filtlbl = 'Analog front-end (Butterworth 1st-order 0.3 Hz highpass, 3rd-order 7500 Hz lowpass)';
        
    case 'butter_o2_lp_5000'
        filtobj = designfilt('lowpassiir',...
            'DesignMethod','butter',...
            'FilterOrder',2,...
            'HalfPowerFrequency',5000,...
            'SampleRate',fs);
        filtlbl = 'IIR Lowpass (Butterworth 2nd-order 5000 Hz)';
        
    case 'butter_o1_hp_0.3'
        filtobj = designfilt('highpassiir',...
            'DesignMethod','butter',...
            'FilterOrder',1,...
            'HalfPowerFrequency',0.3,...
            'SampleRate',fs);
        filtlbl = 'IIR Highpass (Butterworth 0.3 Hz 3-dB point, 1st order)';
        
    case 'butter_o3_lp_7500'
        filtobj = designfilt('lowpassiir',...
            'DesignMethod','butter',...
            'FilterOrder',3,...
            'HalfPowerFrequency',7500,...
            'SampleRate',fs);
        filtlbl = 'IIR Lowpass (Butterworth 7500 Hz 3-dB point, 3rd order)';
        
    case 'fir_hp_250'
        filtobj = designfilt('highpassfir',...
            'DesignMethod','equiripple',...
            'StopbandFrequency',150,...
            'PassbandFrequency',250,...
            'StopbandAttenuation',50,...
            'PassbandRipple',1e-3,...
            'SampleRate',fs);
        filtlbl = 'FIR Highpass (Equiripple 250 Hz 3-db point)';
        
    case 'fir_bp_250-5000'
        filtobj = designfilt('bandpassfir',...
            'DesignMethod','equiripple',...
            'StopbandAttenuation1',50,...
            'StopbandFrequency1',150,...
            'PassbandFrequency1',250,...
            'PassbandRipple',1e-3,...
            'PassbandFrequency2',5000,...
            'StopbandFrequency2',5100,...
            'StopbandAttenuation2',50,...
            'SampleRate',fs);
        filtlbl = 'FIR Bandpass (Equiripple 250/5000 Hz 3-dB points)';
        
    otherwise
        error('Unknown filter name ''%s''',id);
end