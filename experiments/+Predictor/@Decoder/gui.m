function gui(obj)

% do nothing if invalid object
if isempty(obj) || ~isa(obj,'Predictor.Decoder')
    return;
end

% do nothing if GUI not enabled
if ~obj.guiParams.enableGUI
    return;
end

% pop figure to front if already exists
if isfield(obj.guiProps,'handle') && ishandle(obj.guiProps.handle)
    figure(obj.guiProps.handle)
    return;
end

% retrieve object if already open
ff = findobj('Name','DecoderGUI');
if ~isempty(ff) && ishandle(ff)
    obj.guiProps.handle = ff;
    return;
end

% create string for gain edit box
gainStr = sprintf('%1.2f ',obj.runtimeParams.outputGain);
gainStr = sprintf('[%s]',gainStr(1:end-1));

lags2ProcessStr = sprintf('%1.2f ',obj.decoderParams.lags2Process);
lags2ProcessStr = sprintf('[%s]',lags2ProcessStr(1:end-1));

movementDelayStr = sprintf('%1.2f ',obj.runtimeParams.movementDelay);
movementDelayStr = sprintf('[%s]',movementDelayStr(1:end-1));


% create string for assist edit box
assistStr = sprintf('%1.2f ',obj.runtimeParams.assistLevel);
assistStr = sprintf('[%s]',assistStr(1:end-1));

% sizing/location parameters for the GUI
guiWidth = 330+50;
guiHeight = 250+22*3;
guiInnerMargin = 15;
defaultMargin = 5;

% create the main figure
% 'Color',[0.94 0.94 0.94],...
h = figure(...
    'Units','pixels',...
    'IntegerHandle','off',...
    'MenuBar','none',...
    'Name',sprintf('DecoderGUI - %s',obj.name),...
    'NumberTitle','off',...
    'PaperPosition',get(0,'defaultfigurePaperPosition'),...
    'Position',[100 100 guiWidth guiHeight],...
    'Resize','off',...
    'UserData',[],...
    'Tag','fh');


% gain text, edit box, apply button
currLeft = guiInnerMargin;
currBottom = guiInnerMargin;
textGain = uicontrol(...
    'Parent',h,...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom+2 43 14],...
    'String','Gain: ',...
    'Style','text');
currLeft = currLeft + 43 + defaultMargin;
editGain = uicontrol(...
    'Parent',h,...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom 175 22],...
    'String',gainStr,...
    'Style','edit',...
    'Tag','editGain');
currLeft = currLeft + 175 + defaultMargin;
buttonApplyGain = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom 65 22],...
    'String','Apply',...
    'Style','pushbutton',...
    'Tag','buttonApplyGain',...
    'Callback',@(h,y)buttonApplyGain_Callback(obj,h));


% movementDelay
currLeft = guiInnerMargin;
currBottom = currBottom + 22 + defaultMargin;
textDelay = uicontrol(...
    'Parent',h,...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom+2 43 14],...
    'String','Delay: ',...
    'Style','text');
currLeft = currLeft + 43 + defaultMargin;
editDelay = uicontrol(...
    'Parent',h,...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom 175 22],...
    'String',movementDelayStr,...
    'Style','edit',...
    'Tag','editDelay');
currLeft = currLeft + 175 + defaultMargin;
buttonApplyDelay = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom 65 22],...
    'String','Apply',...
    'Style','pushbutton',...
    'Tag','buttonApplyDelay',...
    'Callback',@(h,y)buttonApplyDelay_Callback(obj,h));


currLeft = guiInnerMargin;
currBottom = currBottom + 22 + defaultMargin;
textlags2Process = uicontrol(...
    'Parent',h,...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom+2 43 14],...
    'String','Lags: ',...
    'Style','text');
currLeft = currLeft + 43 + defaultMargin;
editlags2Process = uicontrol(...
    'Parent',h,...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom 175 22],...
    'String',lags2ProcessStr,...
    'Style','edit',...
    'Tag','editlags2Process');
currLeft = currLeft + 175 + defaultMargin;
buttonApplylags2Process = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom 65 22],...
    'String','Apply',...
    'Style','pushbutton',...
    'Tag','buttonApplylags2Process',...
    'Callback',@(h,y)buttonApplylags2Process_Callback(obj,h));



% assist method selection
currLeft = guiInnerMargin;
currBottom = currBottom + 22 + defaultMargin;
textAssistMethod = uicontrol(...
    'Parent',h,...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom+2 43 14],...
    'String','Method: ',...
    'Style','text');
currLeft = currLeft + 43 + defaultMargin;
popupAssistMethod = uicontrol(...
    'Parent',h,...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom 175 22],...
    'String',{'WeightedAverage','Projection','ErrorRail','DirectionRail'},...
    'Style','popupmenu',...
    'Tag','popupAssistMethod');
currLeft = currLeft + 175 + defaultMargin;
buttonApplyAssistMethod = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom 65 22],...
    'String','Apply',...
    'Style','pushbutton',...
    'Tag','buttonApplyAssistMethod',...
    'Callback',@(h,y)buttonApplyAssistMethod_Callback(obj,h));



% assist text, edit box, apply button
currLeft = guiInnerMargin;
currBottom = currBottom + 22 + defaultMargin;
textAssist = uicontrol(...
    'Parent',h,...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom+2 43 14],...
    'String','Assist: ',...
    'Style','text');
currLeft = currLeft + 43 + defaultMargin;
editAssist = uicontrol(...
    'Parent',h,...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom 175 22],...
    'String',assistStr,...
    'Style','edit',...
    'Tag','editAssist');
currLeft = currLeft + 175 + defaultMargin;
buttonApplyAssist = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom 65 22],...
    'String','Apply',...
    'Style','pushbutton',...
    'Tag','buttonApplyAssist',...
    'Callback',@(h,y)buttonApplyAssist_Callback(obj,h));


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% training select
currLeft = guiInnerMargin;
currBottom = currBottom + 40 + defaultMargin;
textTrainSelect = uicontrol(...
    'Parent',h,...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom+2 43 14],...
    'String','Train: ',...
    'Style','text');

currLeft = currLeft + 43 + defaultMargin;
popupTrainSelect = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom-5 175 25],...
    'String','No Training Scripts',...
    'Enable','off',...
    'Style','popupmenu',...
    'Tag','popupTrainSelect');

currLeft = currLeft + 175 + defaultMargin;
buttonBatchTrain = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom-2 65 22],...
    'String','BatchTrain',...
    'Style','pushbutton',...
    'Tag','buttonBatchTrain',...
    'Callback',@(h,y)buttonBatchTrain_Callback(obj,h));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% decoder select
currLeft = guiInnerMargin;
currBottom = currBottom + 22 + defaultMargin;
textDecoderSelect = uicontrol(...
    'Parent',h,...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom+2 43 14],...
    'String','Select: ',...
    'Style','text');
currLeft = currLeft + 43 + defaultMargin;
popupDecoderSelect = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom-5 175 25],...
    'String','No Decoders Available',...
    'Enable','off',...
    'Style','popupmenu',...
    'Tag','popupDecoderSelect');

currLeft = currLeft + 175 + defaultMargin;
buttonDecoderApply = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom-2 65 22],...
    'String','Apply',...
    'Style','pushbutton',...
    'Tag','buttonDecoderApply',...
    'Callback',@(h,y)buttonDecoderApply_Callback(obj,h));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%





% current decoder
currLeft = guiInnerMargin;
currBottom = currBottom + 22 + defaultMargin;
textDecoderCurrent = uicontrol(...
    'Parent',h,...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom+2 43 14],...
    'String','Current: ',...
    'Style','text');
currLeft = currLeft + 43 + defaultMargin;
editDecoderCurrent = uicontrol(...
    'Parent',h,...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom-2 175 22],...
    'String','None',...
    'Style','edit',...
    'Enable','off',...
    'Tag','editDecoderCurrent');


% decoder name/train button
currLeft = guiInnerMargin;
currBottom = currBottom + 22 + defaultMargin;
textDecoderName = uicontrol(...
    'Parent',h,...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom+2 43 14],...
    'String','Name: ',...
    'Style','text');
currLeft = currLeft + 43 + defaultMargin;
editDecoderName = uicontrol(...
    'Parent',h,...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom-2 175 22],...
    'String',sprintf('Decoder-%0.2d',length(obj.decoders)),...
    'Style','edit',...
    'Tag','editDecoderName');
currLeft = currLeft + 175 + defaultMargin;
buttonTrain = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom-2 65 22],...
    'String','Train',...
    'Style','pushbutton',...
    'Tag','buttonTrain',...
    'Callback',@(h,y)buttonTrain_Callback(obj,h));




buttonLoad = uicontrol(...
    'Parent',h,...
    'Position',[currLeft+70 currBottom-2-25 65 22],...
    'String','Load',...
    'Style','pushbutton',...
    'Tag','buttonLoad',...
    'Callback',@(h,y)buttonLoad_Callback(obj,h));

buttonEnable = uicontrol(...
    'Parent',h,...
    'Position',[currLeft+70 currBottom-2-2*25 65 22],...
    'String','Enable',...
    'Style','togglebutton',...
    'BackgroundColor','green',...
    'Tag','buttonEnable',...
    'Callback',@(h,y)toggleEnable_Callback(obj,h));

buttonSecondaryAssist = uicontrol(...
    'Parent',h,...
    'Position',[currLeft+70 currBottom-2-25*3 65 22],...
    'String','2ndAssist',...
    'Style','togglebutton',...
    'BackgroundColor','green',...
    'Tag','buttonSecondaryAssist',...
    'Callback',@(h,y)togglebuttonSecondaryAssist_Callback(obj,h));


editSecondAssistLevel = uicontrol(...
    'Parent',h,...
    'Position',[currLeft+70 currBottom-2-25*4 65 22],...
    'HorizontalAlignment','left',...
    'String','',...
    'Style','edit',...
    'Tag','editSecondAssistLevel');

% buffer toggle, empty buffer, buffer fill
currLeft = guiInnerMargin;
currBottom = currBottom + 30 + defaultMargin;
color = 'green';
str = 'Buffering Enabled';
if ~obj.BufferData
    color = 'red';
    str = 'Buffering Paused';
end
toggleBuffer = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom 105 22],...
    'String',str,...
    'Style','togglebutton',...
    'BackgroundColor',color,...
    'Tag','toggleBuffer',...
    'Value',obj.BufferData,...
    'Callback',@(h,y)toggleBuffer_Callback(obj,h));

currLeft = currLeft + 105 + defaultMargin;
buttonEmptyBuffers = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom 114 22],...
    'String','Empty Buffer',...
    'Style','pushbutton',...
    'Tag','buttonEmptyBuffers',...
    'Callback',@(h,y)buttonEmptyBuffers_Callback(obj,h));

currLeft = currLeft + 114 + defaultMargin;
editBufferFill = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom 63 22],...
    'HorizontalAlignment','left',...
    'String','',...
    'Style','edit',...
    'Tag','editBufferFill');

obj.guiProps.handle = h;
obj.guiProps.guihandles = guihandles(h);




function buttonApplyGain_Callback(obj,h)
handles = guihandles(h);
obj.runtimeParams.outputGain = eval(get(handles.editGain,'String'));
msg = sprintf('%1.2f ',obj.runtimeParams.outputGain);
obj.msgName(sprintf('Changed gain to [%s]',msg(1:end-1)));

function buttonApplyDelay_Callback(obj,h)
handles = guihandles(h);
obj.runtimeParams.movementDelay = eval(get(handles.editDelay,'String'));
msg = sprintf('%1.2f ',obj.runtimeParams.movementDelay);
obj.msgName(sprintf('Changed movementDelay to [%s]',msg(1:end-1)));

function buttonApplylags2Process_Callback(obj,h)
handles = guihandles(h);
obj.decoderParams.lags2Process = eval(get(handles.editlags2Process,'String'));
msg = sprintf('%1.2f ',obj.decoderParams.lags2Process);
obj.msgName(sprintf('Changed lags2Process to [%s]',msg(1:end-1)));

function buttonApplyAssist_Callback(obj,h)
handles = guihandles(h);
obj.runtimeParams.assistLevel = eval(get(handles.editAssist,'String'));
msg = sprintf('%1.2f ',obj.runtimeParams.assistLevel);
obj.msgName(sprintf('Changed assist to [%s]',msg(1:end-1)));

function buttonApplyAssistMethod_Callback(obj,h)
handles = guihandles(h);
options = get(handles.popupAssistMethod,'String');
which = get(handles.popupAssistMethod,'Value');
obj.runtimeParams.assistType = options{which};
obj.msgName(sprintf('Changed assist method to %s',options{which}));

function toggleEnable_Callback(obj,h)

enableDecoder(obj)

if obj.frameworkParams.enableDecoder   
    set(h,'BackgroundColor','green');
    set(h,'String','Enabled');
else    
    set(h,'BackgroundColor','red');
    set(h,'String','Disabled');
end

function togglebuttonSecondaryAssist_Callback(obj,h)

out=EnableSecondayAssist(obj);

if out   
    set(h,'BackgroundColor','green');
    set(h,'String','2ndAssistOn');
else    
    set(h,'BackgroundColor','red');
    set(h,'String','2ndAssistOff');
end


function toggleBuffer_Callback(obj,h)
if get(h,'Value')==get(h,'Max')
    obj.BufferData = 1;
    obj.msgName('Buffering on');
    set(h,'BackgroundColor','green');
    set(h,'String','Buffering Enabled');
else
    obj.BufferData = 0;
    obj.msgName('Buffering paused');
    set(h,'BackgroundColor','red');
    set(h,'String','Buffering Paused');
end

function buttonEmptyBuffers_Callback(obj,~)
obj.emptyBuffers;
obj.msgName('Emptied the training buffers');

function buttonLoad_Callback(obj,h)
handles = guihandles(h);
name = get(handles.editDecoderName,'String');
obj.loadDecoder();

function buttonTrain_Callback(obj,h)
handles = guihandles(h);
name = get(handles.editDecoderName,'String');
obj.Train('name',name);

function buttonBatchTrain_Callback(obj,h)
handles = guihandles(h);
funcIDX = get(handles.popupTrainSelect,'Value');
funcName=obj.decoderParams.batchTrainScript{funcIDX};
% funcName=obj.Params.batchTrainScript{funcIDX};
name = get(handles.editDecoderName,'String');

obj.BatchTrain(funcName,name);


function buttonDecoderApply_Callback(obj,h)
handles = guihandles(h);
which = get(handles.popupDecoderSelect,'Value');
obj.setDecoderINDX(which);