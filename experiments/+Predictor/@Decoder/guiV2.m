function guiV2(obj)

% do nothing if GUI not enabled
if ~obj.guiParams.enableGUI
    return;
end

%%
gui.Window=figure;
gui.mainLayout = uiextras.TabPanel( 'Parent', gui.Window);

% Create the panels
gui.runtimeParams.Main = uiextras.GridFlex( 'Parent', gui.mainLayout, 'Spacing', 5 );

gui.runtimeParams.Text=uiextras.Grid( 'Parent', gui.runtimeParams.Main, 'Spacing', 5 );
gui.runtimeParams.DropDown=uiextras.Grid( 'Parent', gui.runtimeParams.Main, 'Spacing', 5 );
gui.runtimeParams.Buttons=uiextras.Grid( 'Parent', gui.runtimeParams.Main, 'Spacing', 5 );
uicontrol( 'Parent', gui.runtimeParams.Main, 'Background', 'r' )

set( gui.runtimeParams.Main, 'ColumnSizes', [-2  -1], 'RowSizes', [-2 -1] );
%%

textGain = uicontrol(...
    'Parent',gui.runtimeParams.Text,...
    'HorizontalAlignment','left',...
    'String','Gain: ',...
    'Style','text');

gainStr='[1 1 1]'

editGain = uicontrol(...
    'Parent',gui.runtimeParams.Text,...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left',...    
    'String',gainStr,...
    'Style','edit',...
    'Tag','editGain');

buttonApplyGain = uicontrol(...
    'Parent',gui.runtimeParams.Text,...    
    'String','Apply',...
    'Style','pushbutton',...
    'Tag','buttonApplyGain',...
    'Callback',@(h,y)changeGain(obj,h));
%%

set( gui.runtimeParams.Text, 'ColumnSizes', [-1 -2 -1], 'RowSizes', [-1 -1] );

%%

uicontrol( 'Parent', gui.runtimeParams.Main, 'Background', 'b' )
uicontrol( 'Parent', gui.runtimeParams.Main, 'Background', 'g' )
uicontrol( 'Parent', gui.runtimeParams.Main, 'Background', 'y' )
set( gui.runtimeParams.Main, 'ColumnSizes', [-1  -2], 'RowSizes', [-1 -2] );


%%


buttonApplyAssist = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom 45 22],...
    'String','Apply',...
    'Style','pushbutton',...
    'Tag','buttonApplyAssist',...
    'Callback',@(h,y)changeAssist(obj,h));
%%

mainLayout.TabNames={'rtPrm','dcPrm','fwPrm'};
%%

gui.ViewPanel = uiextras.BoxPanel( ...
   'Parent', mainLayout, ...
   'Title', 'Viewing: ???', ...
   'HelpFcn', @onDemoHelp );

% Adjust the main layout

set( mainLayout, 'Sizes', [-1,-2]  );

% construct


% do nothing if invalid object
if(isempty(obj) || (~isa(obj,'Decoder')))
    return;
end

% pop figure to front if already exists
if(isfield(obj.guiProps,'handle') && ishandle(obj.guiProps.handle))
    figure(obj.guiProps.handle)
    return;
end

% retrieve object if already open
ff = findobj('Name','DecoderGUI');
if(~isempty(ff) && ishandle(ff))
    obj.guiProps.handle = ff;
    return;
end

% create string for gain edit box
gainStr = sprintf('%1.2f ',obj.runtimeParams.outputGain);
gainStr = sprintf('[%s]',gainStr(1:end-1));

% create string for assist edit box
assistStr = sprintf('%1.2f ',obj.runtimeParams.assistLevel);
assistStr = sprintf('[%s]',assistStr(1:end-1));

% sizing/location parameters for the GUI
guiWidth = 350;
guiHeight = 100;
guiInnerMargin = 15;
defaultMargin = 5;

% create the main figure
h = figure(...
    'Units','pixels',...
    'Color',[0.94 0.94 0.94],...
    'IntegerHandle','off',...
    'MenuBar','none',...
    'Name','DecoderGUI',...
    'NumberTitle','off',...
    'PaperPosition',get(0,'defaultfigurePaperPosition'),...
    'Position',[100 100 guiWidth guiHeight],...
    'Resize','off',...
    'UserData',[],...
    'Tag','fh');

% create bottom row: gain text, edit box, apply button
currLeft = guiInnerMargin;
currBottom = guiInnerMargin;
textGain = uicontrol(...
    'Parent',h,...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom+2 38 14],...
    'String','Gain: ',...
    'Style','text');
currLeft = currLeft + 38 + defaultMargin;
editGain = uicontrol(...
    'Parent',h,...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom 126 22],...
    'String',gainStr,...
    'Style','edit',...
    'Tag','editGain');
currLeft = currLeft + 126 + defaultMargin;
buttonApplyGain = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom 45 22],...
    'String','Apply',...
    'Style','pushbutton',...
    'Tag','buttonApplyGain',...
    'Callback',@(h,y)changeGain(obj,h));

% create next row up: assist text, edit box, apply button
currLeft = guiInnerMargin;
currBottom = currBottom + 22 + defaultMargin;
textAssist = uicontrol(...
    'Parent',h,...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom+2 38 14],...
    'String','Assist: ',...
    'Style','text');
currLeft = currLeft + 38 + defaultMargin;
editAssist = uicontrol(...
    'Parent',h,...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left',...
    'Position',[currLeft currBottom 126 22],...
    'String',assistStr,...
    'Style','edit',...
    'Tag','editAssist');
currLeft = currLeft + 126 + defaultMargin;
buttonApplyAssist = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom 45 22],...
    'String','Apply',...
    'Style','pushbutton',...
    'Tag','buttonApplyAssist',...
    'Callback',@(h,y)changeAssist(obj,h));

% create top row up: buffer toggle, empty buffer, buffer fill
currLeft = guiInnerMargin;
currBottom = currBottom + 22 + defaultMargin;
color = 'green';
str = 'Buffering Enabled';
if(~obj.BufferData)
    color = 'red';
    str = 'Buffering Paused';
end
toggleBuffer = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom 105 22],...
    'String',str,...
    'Style','togglebutton',...
    'BackgroundColor',color,...
    'Tag','toggleBuffer',...
    'Value',obj.BufferData,...
    'Callback',@(h,y)changeBufferState(obj,h));

currLeft = currLeft + 105 + defaultMargin;
buttonEmptyBuffers = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom 105 22],...
    'String','Empty Buffer',...
    'Style','pushbutton',...
    'Tag','buttonEmptyBuffers',...
    'Callback',@(h,y)emptyBuffers(obj,h));

currLeft = currLeft + 105 + defaultMargin;
editBufferFill = uicontrol(...
    'Parent',h,...
    'Position',[currLeft currBottom 105 22],...
    'HorizontalAlignment','left',...
    'String','',...
    'Style','edit',...
    'Tag','editBufferFill');

obj.guiProps.handle = h;




function changeGain(obj,h)
handles = guihandles(h);
obj.runtimeParams.outputGain = eval(get(handles.editGain,'String'));
msg = sprintf('%1.2f ',obj.runtimeParams.outputGain);
obj.msgName(sprintf('Changed gain to [%s]',msg(1:end-1)));

function changeAssist(obj,h)
handles = guihandles(h);
obj.runtimeParams.assistLevel = eval(get(handles.editAssist,'String'));
msg = sprintf('%1.2f ',obj.runtimeParams.assistLevel);
obj.msgName(sprintf('Changed assist to [%s]',msg(1:end-1)));

function changeBufferState(obj,h)
if(get(h,'Value')==get(h,'Max'))
    obj.BufferData = 1;
    obj.msgName('Buffering on');
    set(h,'BackgroundColor','green');
    set(h,'String','Buffering Enabled');
else
    obj.BufferData = 0;
    obj.msgName('Buffering paused');
    set(h,'BackgroundColor','red');
    set(h,'String','Buffering Paused');
end

function emptyBuffers(obj,~)
obj.emptyBuffers;
obj.msgName('Emptied the training buffers');