function DefaultSettings_Common(obj)

% get global defaults
args = {};
if ~isempty(obj.hTask.hFramework) && isa(obj.hTask.hFramework,'Framework.Interface') 
    if obj.hTask.hFramework.options.enableSync
        args = [args {'sync'}];
    end
    if obj.hTask.hFramework.options.taskDisplayRefresh
        args = [args {'extrefresh'}];
    end
end
Task.Common.DefaultSettings(obj,args{:});

% catch trial alternatives
obj.user.catch_audio = {'red','green','blue','yellow','apple','elephant','house','sunny'};
obj.user.catch_symbol = {'&','$','#','@'};
obj.user.catch_text = {'red','green','blue','yellow','apple','elephant','house','sunny'};
obj.user.catch_char = {'a','b','c','d','e','f','g','h','i','j','k','m','n','p','q','r','s','t','u','v','w','x','y','z'};

% miscellaneous settings
obj.user.fontSize = 160; % font size of the operation string
obj.user.fontFamily = 'Courier'; % font of the operation string
obj.user.fontColor = 150*[0.5 0.5 0.5]; % color of the operation string

% define sounds
obj.sounds.add = 'arithmetic/add.wav';
obj.sounds.subtract = 'arithmetic/subtract.wav';
obj.sounds.multiply = 'arithmetic/multiply.wav';
obj.sounds.divide = 'arithmetic/divide.wav';
obj.sounds.red = 'spokencolor/red.wav';
obj.sounds.green = 'spokencolor/green.wav';
obj.sounds.blue = 'spokencolor/blue.wav';
obj.sounds.yellow = 'spokencolor/yellow.wav';
obj.sounds.sunny = 'spokenmisc/sunny.wav';
obj.sounds.apple = 'spokenmisc/apple.wav';
obj.sounds.elephant = 'spokenmisc/elephant.wav';
obj.sounds.house = 'spokenmisc/house.wav';
for kk=0:9
    obj.sounds.(sprintf('num%d',kk)) = sprintf('numbers/english/%d.wav',kk);
end

% trial data
obj.trialDataConstructor = @Task.Arithmetic.TrialData;

% keyboard
obj.keys.response = {{},[arrayfun(@(x)num2str(x),0:9,'UniformOutput',false) {'c'}]};

% trial params
obj.trialParamsFcn = @Task.Arithmetic.createTrialParams;


% title screen
pidx=1;
obj.prefaceDefinitions{pidx} = {@Task.Common.PrefaceTitle,...
    'Name','Title',...
    'titleString','Arithmetic Task',...
    'durationTimeout',1000};

% instructions
pidx=pidx+1;
obj.prefaceDefinitions{pidx} = {@Task.Common.PrefaceTextOnly,...
    'Name',sprintf('Instructions_%02d',pidx-1),...
    'durationTimeout',1000,...
    'nextPhase',sprintf('Instructions_%02d',pidx),'prevPhase',sprintf('Title'),...
    'text',[...
        'This task will explore how arithmetic is represented in the parietal cortex.\n\n',...
        sprintf('The answers for this task will range between %d and %d.',min(obj.user.answers),max(obj.user.answers))]};

% cue descriptions
pidx=pidx+1;
obj.prefaceDefinitions{pidx} = {@Task.Common.PrefaceTextOnly,...
    'Name',sprintf('Instructions_%02d',pidx-1),...
    'durationTimeout',1000,...
    'nextPhase',sprintf('Instructions_%02d',pidx),'prevPhase',sprintf('Instructions_%02d',pidx-2),...
    'text',[...
        sprintf('There will be %d ways numbers are conveyed to you: %s\n\n',length(obj.user.nummodality),strjoin(obj.user.nummodality,', ')),...
        sprintf('Also, there will be %d ways the arithmetic operators are conveyed to you: %s.',length(obj.user.cuemodality),strjoin(obj.user.cuemodality,', '))]};

% transition
pidx=pidx+1;
obj.prefaceDefinitions{pidx} = {@Task.Common.PrefaceTextOnly,...
    'Name',sprintf('Instructions_%02d',pidx-1),...
    'durationTimeout',1000,...
    'nextPhase',sprintf('Instructions_%02d',pidx),'prevPhase',sprintf('Instructions_%02d',pidx-2),...
    'text',[...
        'After the complete arithmetic problem has been presented, the screen will be blank for a short time before you need to respond. During this time, you can calculate the answer.\n\n',...
        'A brief tone will let you know when to respond. When you hear the tone, verbally say the answer you have calculated.']};

% catch trials
pidx=pidx+1;
obj.prefaceDefinitions{pidx} = {@Task.Common.PrefaceTextOnly,...
    'Name',sprintf('Instructions_%02d',pidx-1),...
    'durationTimeout',1000,...
    'nextPhase',sprintf('Instructions_%02d',pidx),'prevPhase',sprintf('Instructions_%02d',pidx-2),...
    'text',[...
        'On some trials, you may see or hear values that don''t make sense for a math problem.\nFor example: 3 + c or 7 # 2.\n\n',...
        'On these trials, respond by saying the word ''catch''.']};

% fixation point instruction
pidx=pidx+1;
obj.prefaceDefinitions{pidx} = {@Task.Common.PrefaceTextOnly,...
    'Name',sprintf('Instructions_%02d',pidx-1),...
    'durationTimeout',1000,...
    'drawFixationPoint',true,...
    'nextPhase','Countdown','prevPhase',sprintf('Instructions_%02d',pidx-2),...
    'text','Throughout the task, when this fixation point is displayed on the screen, keep your eyes fixated on it.'};

% countdown
pidx=pidx+1;
obj.prefaceDefinitions{pidx} = {@Task.Common.PrefaceCountdown,...
    'Name','Countdown',...
    'countdownStartValue',3,...
    'countdownInterval',1.5,...
    'durationTimeout',1000};


% summary
obj.summaryDefinitions{1} = {@Task.Common.PhaseDelayKeypressContinue,...
    'Name','Delay',...
    'durationTimeout',1000};
obj.summaryDefinitions{2} = {@Task.Common.SummaryScore,...
    'Name','Score',...
    'durationTimeout',1000};
obj.summaryDefinitions{3} = {@Task.Common.SummaryReward,...
    'Name','Reward',...
    'durationTimeout',1000};