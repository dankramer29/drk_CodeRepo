function DefaultSettings_Common(obj)

% home location
obj.user.home_location = [0 0];

% get global defaults
args = {};
if ~isempty(obj.hTask.hFramework) && isa(obj.hTask.hFramework,'Framework.Interface') 
    % turn off sync for this task (at Keck, no hardware to read it)
    %if obj.hTask.hFramework.options.enableSync
    %    args = [args {'sync'}];
    %end
    if obj.hTask.hFramework.options.taskDisplayRefresh
        args = [args {'extrefresh'}];
    end
end
Task.Common.DefaultSettings(obj,args{:});

% miscellaneous settings
obj.user.fontSize = 160; % font size of the operation string
obj.user.fontFamily = 'Courier'; % font of the operation string
obj.user.fontColor = 150*[0.5 0.5 0.5]; % color of the operation string

% sound
obj.useSound = false;
obj.soundConstructor = @Experiment2.Sound.PTBSoundRemote;
obj.soundConfig = @(x)x;

% define sounds
%obj.sounds.Go = 'digital_blip.wav';
%obj.sounds.Timeout = 'nomail.wav';
%obj.sounds.Home = 'spokennumbers/0.wav';
%for kk=1:8
%    obj.sounds.(sprintf('num%d',kk)) = sprintf('spokennumbers/%d.wav',kk);
%end

% trial data
obj.trialDataConstructor = @Task.Endpoint2D.TrialData;

% trial params
obj.trialParamsFcn = @Task.Endpoint2D.createTrialParams;

% keyboard
obj.keys.response = {{},[arrayfun(@(x)num2str(x),0:9,'UniformOutput',false) {'c'}]};

% trial params
obj.trialParamsFcn = @Task.Endpoint2D.createTrialParams;

% effectors
eff_start_loc = [obj.user.home_location(:) zeros(length(obj.user.home_location),1)]';
eff_start_loc = eff_start_loc(:)';
obj.effectorDefinitions{1} = {@Task.Endpoint2D.EndpointObject,...
    1,... % id
    'type','effector',...
    'numKinematicVars',4,...
    'stateIdxHitTest',[1 3],...
    'stateMode','pro',...
    'state',eff_start_loc,...
    'shape','oval',...
    'color',obj.user.effector_profile.default.color,...
    'scale',obj.user.effector_profile.default.scale,...
    'brightness',obj.user.effector_profile.default.brightness};

% targets (plus home target)
for kk=1:length(obj.user.target_locations)
    obj.targetDefinitions{kk} = {@Task.Endpoint2D.EndpointObject,...
        kk,... % id
        'type','target',...
        'numKinematicVars',2,...
        'durationHold',1,...
        'stateIdxHitTest',[1 2],...
        'stateMode','pro',...
        'state',obj.user.target_locations{kk},...
        'shape','oval',...
        'color',obj.user.target_profile.default.color,...
        'scale',obj.user.target_profile.default.scale,...
        'brightness',obj.user.target_profile.default.brightness};
end
obj.targetDefinitions{kk+1} = {@Task.Endpoint2D.EndpointObject,...
    kk+1,... % id
    'type','target',...
    'numKinematicVars',2,...
    'durationHold',1,...
    'stateIdxHitTest',[1 2],...
    'stateMode','pro',...
    'state',obj.user.home_location,...
    'shape','oval',...
    'color',obj.user.target_profile.default.color,...
    'scale',obj.user.target_profile.default.scale,...
    'brightness',obj.user.target_profile.default.brightness};

% title screen
pidx=1;
obj.prefaceDefinitions{pidx} = {@Task.Common.PrefaceTitle,...
    'Name','Title',...
    'titleString','Center-Out Task',...
    'durationTimeout',1000};

% summary
obj.summaryDefinitions{1} = {@Task.Common.PhaseDelayKeypressContinue,...
    'Name','Delay',...
    'durationTimeout',1000};
obj.summaryDefinitions{2} = {@Task.Common.SummaryScore,...
    'Name','Score',...
    'durationTimeout',1000};
obj.summaryDefinitions{3} = {@Task.Common.SummaryReward,...
    'Name','Reward',...
    'durationTimeout',1000};

% event handlers
obj.objectEventHandlers = {
    'ObjectHit',    'ObjectHitFcn'};
obj.trialEventHandlers = {};
obj.taskEventHandlers = {};