function DefaultSettings_MorseCode(obj)

% get global defaults
args = {};
if ~isempty(obj.hTask.hFramework) && isa(obj.hTask.hFramework,'Framework.Interface') 
    if obj.hTask.hFramework.options.enableSync
        args = [args {'sync'}];
    end
    if obj.hTask.hFramework.options.taskDisplayRefresh
        args = [args {'extrefresh'}];
    end
end
Task.Common.DefaultSettings(obj,args{:});

% shape settings
obj.user.shapeSize = 80;
obj.user.shapeColor = 255*[0.6 0.6 0.6];

% object settings
obj.user.objectSize = 200; % this is the maximum dimension
obj.user.objectSizeSrc = 'params'; % 'params','file'

%  image settings
obj.user.imageSize = 800;
obj.user.imageSizeSrc = 'params'; % 'params','file'

% trial data
obj.trialDataConstructor = @Task.NumberLanguage.TrialData;

% keyboard
for kk=1:length(obj.user.rsp_types)
    type = obj.user.rsp_types{kk}{1};
    subtype = obj.user.rsp_types{kk}{2};
    [~,chr] = Task.NumberLanguage.getResponseData(type,subtype);
    obj.keys.(sprintf('%s_%s',type,subtype)) = {{},chr};
end

% auto-add sounds and images based on cue types
for kk=1:length(obj.user.cue_types)
    type = obj.user.cue_types{kk}{1};
    subtype = obj.user.cue_types{kk}{2};
    numlist = obj.user.numbers;
    dt = Task.NumberLanguage.getCueData(type,subtype);
    if strcmpi(type,'sound')
        for nn=1:length(numlist)
            obj.sounds.(sprintf('%s_%d',subtype,numlist(nn))) = dt{numlist(nn)+1};
        end
    elseif strcmpi(type,'image')
        for nn=1:length(numlist)
            obj.images.(sprintf('%s_%d',subtype,numlist(nn))) = dt{numlist(nn)+1};
        end
    elseif strcmpi(type,'object')
        obj.images.(subtype) = dt{1};
    end
end
obj.sounds.getready = 'blip1.wav';

% auto-add sounds and images based on response types
for kk=1:length(obj.user.rsp_types)
    type = obj.user.rsp_types{kk}{1};
    subtype = obj.user.rsp_types{kk}{2};
    dt = Task.NumberLanguage.getResponseData(type,subtype);
    if strcmpi(type,'language')
        obj.sounds.(sprintf('%s_%s',type,subtype)) = dt;
    elseif strcmpi(type,'math')
        obj.sounds.(sprintf('%s_%s',type,subtype)) = dt;
    elseif strcmpi(type,'action')
        obj.sounds.(sprintf('%s_%s',type,subtype)) = dt;
    end
end

% trial params
obj.trialParamsFcn = @Task.NumberLanguage.createTrialParams;

% title screen
pidx=1;
obj.prefaceDefinitions{pidx} = {@Task.Common.PrefaceTitle,...
    'Name','Title',...
    'titleString','Number Language Task',...
    'durationTimeout',1000};

% instructions
pidx=pidx+1;
obj.prefaceDefinitions{pidx} = {@Task.NumberLanguage.PrefaceInstructions_TextOnly,...
    'Name',sprintf('Instructions_%02d',pidx-1),...
    'durationTimeout',1000,...
    'nextPhase',sprintf('Instructions_%02d',pidx),'prevPhase',sprintf('Title'),...
    'text',[...
    sprintf('This task will explore how the numbers %s are represented in the parietal cortex.\n\n',util.vec2str(obj.user.numbers,'[%g]',', ')) ...
    sprintf('There will be %d different ways of presenting a number, and %d different ways of responding.',length(obj.user.cue_types),length(obj.user.rsp_types))]};

% cue descriptions
for kk=1:length(obj.user.cue_types)
    pidx=pidx+1;
    [~,desc] = Task.NumberLanguage.getCueData(obj.user.cue_types{kk}{1},obj.user.cue_types{kk}{2});
    obj.prefaceDefinitions{pidx} = {@Task.NumberLanguage.PrefaceInstructions_Cue,...
        'Name',sprintf('Instructions_%02d',pidx-1),...
        'durationTimeout',1000,...
        'nextPhase',sprintf('Instructions_%02d',pidx),'prevPhase',sprintf('Instructions_%02d',pidx-2),...
        'cueIdx',kk,...
        'text',[...
        sprintf('This is cue style %d/%d.  Here, the number is ''@NUMBER@''.\n\n',kk,length(obj.user.cue_types))...
        desc]};
end

% transition
pidx=pidx+1;
obj.prefaceDefinitions{pidx} = {@Task.NumberLanguage.PrefaceInstructions_TextOnly,...
    'Name',sprintf('Instructions_%02d',pidx-1),...
    'durationTimeout',1000,...
    'nextPhase',sprintf('Instructions_%02d',pidx),'prevPhase',sprintf('Instructions_%02d',pidx-2),...
    'text','After the cue disappears, the screen will be blank for a short time before you need to respond.'};

% response descriptions
for kk=1:length(obj.user.rsp_types)
    pidx=pidx+1;
    [~,~,~,desc] = Task.NumberLanguage.getResponseData(obj.user.rsp_types{kk}{1},obj.user.rsp_types{kk}{2});
    obj.prefaceDefinitions{pidx} = {@Task.NumberLanguage.PrefaceInstructions_Response,...
        'Name',sprintf('Instructions_%02d',pidx-1),...
        'durationTimeout',1000,...
        'nextPhase',sprintf('Instructions_%02d',pidx),'prevPhase',sprintf('Instructions_%02d',pidx-2),...
        'rspIdx',kk,...
        'text',[...
        sprintf('This is response style %d/%d.\n\n',kk,length(obj.user.rsp_types))...
        sprintf('If you hear this sound, %s.\n\n',desc)...
        'If you do not know the number, say ''I don''t know''']};
end

% fixation point instruction
pidx=pidx+1;
obj.prefaceDefinitions{pidx} = {@Task.NumberLanguage.PrefaceInstructions_FixationPoint,...
    'Name',sprintf('Instructions_%02d',pidx-1),...
    'durationTimeout',1000,...
    'nextPhase','Countdown','prevPhase',sprintf('Instructions_%02d',pidx-2),...
    'text','Throughout the task, when this fixation point is displayed on the screen, keep your eyes fixated on it.'};

% countdown
pidx=pidx+1;
obj.prefaceDefinitions{pidx} = {@Task.Common.PrefaceCountdown,...
    'Name','Countdown',...
    'countdownStartValue',3,...
    'countdownInterval',1.5,...
    'durationTimeout',1000};

% phases
obj.phaseDefinitions{1} = {@Task.Common.PhaseITI,...
    'Name','ITI',...
    'drawFixationPoint',true,...
    'durationTimeout',2.0};
obj.phaseDefinitions{2} = {@Task.Common.PhaseDelay,...
    'Name','Delay1',...
    'drawFixationPoint',true,...
    'soundId','getready',...
    'durationTimeout',1.0};
obj.phaseDefinitions{3} = {@Task.NumberLanguage.PhasePresentNumber,...
    'Name','ShowSymbols',...
    'durationTimeout',4.0};
obj.phaseDefinitions{4} = {@Task.Common.PhaseDelay,...
    'Name','Delay2',...
    'drawFixationPoint',true,...
    'durationTimeout',2.0};
obj.phaseDefinitions{5} = {@Task.NumberLanguage.PhaseIndicateResponse,...
    'Name','IndicateCatch',...
    'durationTimeout',0.5};
obj.phaseDefinitions{6} = {@Task.NumberLanguage.PhaseRespond,...
    'Name','Respond',...
    'durationTimeout',1000.0};

% summary
obj.summaryDefinitions{1} = {@Task.Common.SummaryScore,...
    'Name','Score',...
    'durationTimeout',1000};
obj.summaryDefinitions{2} = {@Task.Common.SummaryReward,...
    'Name','Reward',...
    'durationTimeout',1000};