classdef GUI < handle & util.Structable
    properties
        hTask
        hFigure
        guiHandles
        ax1
        ax2
        el =[];
        param = [];
        paramSet = [];
    end % END properties
    
    methods
        function this = GUI(t,varargin)
            assert(isa(t,'Experiment2.TaskInterface'),'Must provide object of class "Experiment2.TaskInterface", not "%s"',class(t));
            this.hTask = t;
            layout(this);
        end % END function GUI
        
        function showGUI(this)
            % display the figure
            set(this.hFigure,'Visible','on');
            figure(this.hFigure);
        end % END function showGUI
        
        function hideGUI(this)
            % hide the figure
            set(this.hFigure,'Visible','off');
        end % END function hideGUI
        
        function setTrialInformation(this,trial,num_trials,electrodeID,charge_density,electrode_label,amplitude,frequency,pulsewidth,duration,catch_trial)
            showGUI(this);
            if catch_trial
                set(this.guiHandles.text_trial,'String','[Catch Trial]');
                set(this.guiHandles.text_electrode,'String','N/A');
                set(this.guiHandles.text_cd,'String','N/A uC/cm2/phase');
                set(this.guiHandles.text_amplitude,'String','N/A uA');
                set(this.guiHandles.text_frequency,'String','N/A Hz');
                set(this.guiHandles.text_pulsewidth,'String','N/A us');
                set(this.guiHandles.text_duration,'String','N/A ms');
            else
                set(this.guiHandles.text_trial,'String',sprintf('%d/%d',trial,num_trials));
                set(this.guiHandles.text_electrode,'String',sprintf('%s (%d)',electrode_label,electrodeID));
                set(this.guiHandles.text_cd,'String',sprintf('%0.2f uC/cm2/phase',charge_density));
                set(this.guiHandles.text_amplitude,'String',sprintf('%d uA',amplitude));
                set(this.guiHandles.text_frequency,'String',sprintf('%d Hz',frequency));
                set(this.guiHandles.text_pulsewidth,'String',sprintf('%d us',pulsewidth));
                set(this.guiHandles.text_duration,'String',sprintf('%d ms',duration*1000));
            end
            
        end % END function setTrialInformation
        
        function plotElectrodeHist(this)
            paramtr = this.hTask.params.parameterFcn(find(this.hTask.params.parameterFcn == '_',1,'last')+1:end);
            switch paramtr
                case 'Frequency'
                    this.param = [this.param;this.hTask.cTrialParams.stimFrequency];
                    this.paramSet = this.hTask.params.user.stimFrequencies;
                case 'Amplitude'
                    this.param = [this.param;this.hTask.cTrialParams.stimAmplitude/1000];
                    this.paramSet = this.hTask.params.user.stimAmplitudes/1000;
                case 'Duration'
                    this.param = [this.param;this.hTask.cTrialParams.stimDuration*1000];
                    this.paramSet = this.hTask.params.user.stimDurations*1000;
                case 'Pulsewidth'
                    this.param = [this.param;this.hTask.cTrialParams.stimPulseWidth];
                    this.paramSet = this.hTask.params.user.stimPulseWidths;
            end
            this.el = [this.el;this.hTask.cTrialParams.electrodeNumber];
            axes(this.ax1);
            c1 = categorical(this.el,this.hTask.params.user.electrodeNumbers,this.hTask.params.user.electrodeLabels);
            histogram(c1,'Orientation','horizontal','Barwidth',0.5);
            set(this.ax1,'Position',[0.15,0.08,0.78,0.86],'Xlim',[0.5,numel(this.paramSet)*this.hTask.params.user.numBlockRep+0.5]);
            grid on;
        end  %END function plotElectrodeHist
        
        function plotParameterHist(this)
            paramtr = this.hTask.params.parameterFcn(find(this.hTask.params.parameterFcn == '_',1,'last')+1:end);
            axes(this.ax2);
            c2 = categorical(this.param,this.paramSet,cellstr(string(this.paramSet)));
            histogram(c2,'Orientation','horizontal','Barwidth',0.5);
            set(this.ax2,'Position',[0.11,0.08,0.83,0.86],'Xlim',[0.5,numel(this.hTask.params.user.electrodeNumbers)*this.hTask.params.user.numBlockRep+0.5]);
            grid on;
        end  %END function plotElectrodeHist
        
        function layout(this)
            
            this.hFigure = figure(...
                'PaperPositionMode','auto',...
                'Position',[50 80 800 830],...
                'Visible','off',...
                'Units','pixels');
            
            panel_nav = uipanel('Title','Most Recent Trial Information',...
                'tag','panel_nav',...
                'units','pixels',...
                'position',[20 580 760 235]);
            col1_w = 180;
            col2_w = 180;
            row_h = 25;
            row_sp = 5;
            
            % trial number
            curr_h = 190;
            uicontrol(...
                'style','text',...
                'string','Trial: ',...
                'horizontalalignment','left',...
                'position',[260 curr_h col1_w row_h],...
                'fontsize',13,...
                'fontweight','bold',...
                'parent',panel_nav);
            uicontrol(...
                'style','text',...
                'tag','text_trial',...
                'string','NaN/NaN (NaN sec)',...
                'horizontalalignment','left',...
                'position',[260+col1_w curr_h col2_w row_h],...
                'fontsize',13,...
                'fontweight','bold',...
                'parent',panel_nav);
            
            % electrode
            curr_h = curr_h - (row_h + row_sp);
            uicontrol(...
                'style','text',...
                'string','Electrode: ',...
                'horizontalalignment','left',...
                'position',[260 curr_h col1_w row_h],...
                'fontsize',13,...
                'fontweight','bold',...
                'parent',panel_nav);
            uicontrol(...
                'style','text',...
                'tag','text_electrode',...
                'string','NaN (NaN)',...
                'horizontalalignment','left',...
                'position',[260+col1_w curr_h col2_w row_h],...
                'fontsize',13,...
                'fontweight','bold',...
                'parent',panel_nav);
            
            % cd
            curr_h = curr_h - (row_h + row_sp);
            uicontrol(...
                'style','text',...
                'string','Charge Density: ',...
                'horizontalalignment','left',...
                'position',[260 curr_h col1_w row_h],...
                'fontsize',13,...
                'fontweight','bold',...
                'parent',panel_nav);
            uicontrol(...
                'style','text',...
                'tag','text_cd',...
                'string','NaN',...
                'horizontalalignment','left',...
                'position',[260+col1_w curr_h col2_w row_h],...
                'fontsize',13,...
                'fontweight','bold',...
                'parent',panel_nav);
            
            % amplitude
            curr_h = curr_h - (row_h + row_sp);
            uicontrol(...
                'style','text',...
                'string','Amplitude: ',...
                'horizontalalignment','left',...
                'position',[260 curr_h col1_w row_h],...
                'fontsize',13,...
                'fontweight','bold',...
                'parent',panel_nav);
            uicontrol(...
                'style','text',...
                'tag','text_amplitude',...
                'string','NaN uA',...
                'horizontalalignment','left',...
                'position',[260+col1_w curr_h col2_w row_h],...
                'fontsize',13,...
                'fontweight','bold',...
                'parent',panel_nav);
            
            % frequency
            curr_h = curr_h - (row_h + row_sp);
            uicontrol(...
                'style','text',...
                'string','Frequency: ',...
                'horizontalalignment','left',...
                'position',[260 curr_h col1_w row_h],...
                'fontsize',13,...
                'fontweight','bold',...
                'parent',panel_nav);
            uicontrol(...
                'style','text',...
                'tag','text_frequency',...
                'string','NaN Hz',...
                'horizontalalignment','left',...
                'position',[260+col1_w curr_h col2_w row_h],...
                'fontsize',13,...
                'fontweight','bold',...
                'parent',panel_nav);
            % pulsewidth
            curr_h = curr_h - (row_h + row_sp);
            uicontrol(...
                'style','text',...
                'string','Pulse width: ',...
                'horizontalalignment','left',...
                'position',[260 curr_h col1_w row_h],...
                'fontsize',13,...
                'fontweight','bold',...
                'parent',panel_nav);
            uicontrol(...
                'style','text',...
                'tag','text_pulsewidth',...
                'string','NaN us',...
                'horizontalalignment','left',...
                'position',[260+col1_w curr_h col2_w row_h],...
                'fontsize',13,...
                'fontweight','bold',...
                'parent',panel_nav);
            % duration
            curr_h = curr_h - (row_h + row_sp);
            uicontrol(...
                'style','text',...
                'string','Duration: ',...
                'horizontalalignment','left',...
                'position',[260 curr_h col1_w row_h],...
                'fontsize',13,...
                'fontweight','bold',...
                'parent',panel_nav);
            uicontrol(...
                'style','text',...
                'tag','text_duration',...
                'string','NaN ms',...
                'horizontalalignment','left',...
                'position',[260+col1_w curr_h col2_w row_h],...
                'fontsize',13,...
                'fontweight','bold',...
                'parent',panel_nav);
            
            panel_slider = uipanel('Title','Task Status',...
                'tag','panel_taskStatusSlider',...
                'units','pixels',...
                'position',[20 490 760 70]);
            
            uicontrol('style','slider','position',[20 20 720,20],'parent',panel_slider,'enable','off');
            
            uipanel('Title','Histogram: Electrodes',...
                'tag','panel_ElectrodeHist',...
                'units','pixels',...
                'position',[20 20 370 450]);
            
            uipanel('Title','Histogram: Parameter Sweep',...
                'tag','panel_ParameterHist',...
                'units','pixels',...
                'position',[410 20 370 450]);
            
            % get handles to all the gui elements
            this.guiHandles = guihandles(this.hFigure);
            this.ax1 = axes(this.guiHandles.panel_ElectrodeHist);
            this.ax2 = axes(this.guiHandles.panel_ParameterHist);
            
        end % END function layoutPercept
        
        function st = toStruct(this)
            st = toStruct@util.Structable(this,'hTask','hFigure','guiHandles');
        end % END function toStruct
        
    end  % END methods
end  % END classdef GUI


