function [topic,props] = Chronux        

topic = struct(...
    'name','Chronux Properties',...
    'description','Properties related to chronux',...
    'id','chr');

props.Fs = struct(...
    'validationFcn',@isnumeric,...
    'default',[],...
    'attributes',struct('Description','chronux sampling frequency'));

props.fpass = struct(...
    'validationFcn',@(x)isnumeric(x)&&length(x)==2,...
    'default',[0 200],...
    'attributes',struct('Description','chronux frequency band'));

props.tapers = struct(...
    'validationFcn',@(x)isnumeric(x)&&length(x)==2,...
    'default',[3 5],...
    'attributes',struct('Description','chronux time-bandwidth product and number of tapers'));

props.trialave = struct(...
    'validationFcn',@(x)islogical(x)||(isnumeric(x)&&(x==1||x==0)),...
    'default',false,...
    'attributes',struct('Description','chronux whether to trial-average or not'));

props.pad = struct(...
    'validationFcn',@isnumeric,...
    'default',0,...
    'attributes',struct('Description','chronux zero-padding (-1 => none; 0+n => nextpow2+n'));

props.err = struct(...
    'validationFcn',@(x)isnumeric(x)&&length(x)<=2,...
    'default',0,...
    'attributes',struct('Description','chronux error bar calculation ([0 p] or [0] - none; [1 p] - theoretical; [2 p] - jackknife'));
