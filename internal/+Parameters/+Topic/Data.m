function [topic,props] = Data        

topic = struct(...
    'name','Data Properties',...
    'description','Properties related to data',...
    'id','dt');

props.cacheread = struct(...
    'validationFcn',@(x)islogical(x)||(isnumeric(x)&&(x==1||x==0)),...
    'default',false,...
    'attributes',struct('Description','whether to load cached data from the cache'));

props.cachewrite = struct(...
    'validationFcn',@(x)islogical(x)||(isnumeric(x)&&(x==1||x==0)),...
    'default',false,...
    'attributes',struct('Description','whether to save data into the cache'));

props.class = struct(...
    'validationFcn',@ischar,...
    'default','double',...
    'attributes',struct('Description','the class of data to process (e.g., ''double'', ''single'', etc.'));

props.lmtype = struct(...
    'validationFcn',@ischar,...
    'default','none',...
    'attributes',struct('Description','read the linear model data files ("lmfit" or "lmresid") or the raw data files ("none")'));

props.lmcontext = struct(...
    'validationFcn',@ischar,...
    'default','grid',...
    'attributes',struct('Description','context for the linear mode ("grid" or "file")'));

props.mintrials = struct(...
    'validationFcn',@(x)isnumeric(x)&&x>=0,...
    'default',45,...
    'attributes',struct('Description','minimum number of total trials for analysis'));

props.mintrialspercat = struct(...
    'validationFcn',@(x)isnumeric(x)&&x>=0,...
    'default',8,...
    'attributes',struct('Description','minimum number of trials per category'));